###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        30/Jan/2016  15:22:38
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\src\drivers\xbar\xbar.c
#    Command line =  
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\src\drivers\xbar\xbar.c
#        -D NDEBUG -lCN
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\Release\List\
#        -o
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\Release\Obj\
#        --debug --endian=little --cpu=Cortex-M0+ --no_mem_idioms -e --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\build\iar_6_50\fraclib\
#        -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\build\iar_6_50\meterlib\
#        -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\src\fraclib\
#        -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\src\meterlib\
#        -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\src\common\
#        -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\src\drivers\
#        -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\src\freemaster\
#        -I
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\..\..\..\..\src\projects\_twr_emeter_demo\
#        -Oh --require_prototypes
#    List file    =  
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\Release\List\xbar.lst
#    Object file  =  
#        E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\build\iar_6_50\projects\_twr_emeter_demo\Release\Obj\xbar.o
#
###############################################################################

E:\TCL\PROJECT\SmartHome\资料\freescale\KMSWDRV_EAR2_2\src\drivers\xbar\xbar.c
      1          /*****************************************************************************
      2           * (c) Copyright 2010-2013, Freescale Semiconductor Inc.
      3           * ALL RIGHTS RESERVED.
      4           ***************************************************************************//*!
      5           * @file      xbar.c
      6           * @version   1.0.2.0
      7           * @date      May-14-2012
      8           * @brief     Inter-Peripheral Crossbar Switch (XBAR) driver source code.
      9           ******************************************************************************/
     10          #include "common.h"
     11          #include "xbar.h"
     12          
     13          /******************************************************************************
     14           * data type definitions                                                      *
     15           ******************************************************************************/

   \                                 In section .bss, align 4
     16          static XBAR_CALLBACK pCallbackXBAR=NULL;
   \                     pCallbackXBAR:
   \   00000000                      DS8 4
     17          
     18          /******************************************************************************
     19           * interrupt function prototypes                                              *
     20           ******************************************************************************/
     21          void XBAR_isr (void);
     22          
     23          /******************************************************************************
     24           * Public function definitions                                                *
     25           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     26          void XBAR_Init (tXBAR xbar, uint16 ip, XBAR_CALLBACK pCallback)
     27          {
   \                     XBAR_Init: (+1)
   \   00000000   0xB081             SUB      SP,SP,#+4
   \   00000002   0xB401             PUSH     {R0}
     28            if (pCallback != NULL) { pCallbackXBAR = pCallback; NVIC_SetIsr(INT_PXBAR,ip); }
   \   00000004   0x0010             MOVS     R0,R2
   \   00000006   0xD011             BEQ      ??XBAR_Init_0
   \   00000008   0x....             LDR      R0,??DataTable1
   \   0000000A   0x6002             STR      R2,[R0, #+0]
   \   0000000C   0x2080             MOVS     R0,#+128
   \   0000000E   0x0600             LSLS     R0,R0,#+24       ;; #-2147483648
   \   00000010   0x....             LDR      R2,??DataTable1_1  ;; 0xe000e280
   \   00000012   0x6813             LDR      R3,[R2, #+0]
   \   00000014   0x4303             ORRS     R3,R3,R0
   \   00000016   0x6013             STR      R3,[R2, #+0]
   \   00000018   0x....             LDR      R2,??DataTable1_2  ;; 0xe000e100
   \   0000001A   0x6813             LDR      R3,[R2, #+0]
   \   0000001C   0x4318             ORRS     R0,R0,R3
   \   0000001E   0x6010             STR      R0,[R2, #+0]
   \   00000020   0x....             LDR      R0,??DataTable1_3  ;; 0xe000e41c
   \   00000022   0x6802             LDR      R2,[R0, #+0]
   \   00000024   0xB289             UXTH     R1,R1
   \   00000026   0x0789             LSLS     R1,R1,#+30
   \   00000028   0x4311             ORRS     R1,R1,R2
   \   0000002A   0x6001             STR      R1,[R0, #+0]
     29            XBAR_CTRL0 = xbar.CTRL0;
   \                     ??XBAR_Init_0: (+1)
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x8800             LDRH     R0,[R0, #+0]
   \   00000030   0x....             LDR      R1,??DataTable1_4  ;; 0x40055022
   \   00000032   0x8008             STRH     R0,[R1, #+0]
     30          }
   \   00000034   0xB002             ADD      SP,SP,#+8
   \   00000036   0x4770             BX       LR               ;; return
     31          
     32          /******************************************************************************
     33           * interrupt functions definitions                                            *
     34           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     35          void XBAR_isr (void) 
     36          { 
     37            ioseth (XBAR_CTRL0,XBAR_CTRL0_STS0_MASK); /* clear interrupt flag           */
   \                     XBAR_isr: (+1)
   \   00000000   0x2010             MOVS     R0,#+16
   \   00000002   0x....             LDR      R1,??DataTable1_5  ;; 0x48055022
   \   00000004   0x8008             STRH     R0,[R1, #+0]
     38            if (pCallbackXBAR != (XBAR_CALLBACK)NULL)  { pCallbackXBAR (); }
   \   00000006   0x....             LDR      R0,??DataTable1
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0001             MOVS     R1,R0
   \   0000000C   0xD100             BNE      ??XBAR_isr_0
   \   0000000E   0x4770             BX       LR
   \                     ??XBAR_isr_0: (+1)
   \   00000010   0xB580             PUSH     {R7,LR}
   \   00000012   0x4780             BLX      R0
     39          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     pCallbackXBAR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0xE000E280         DC32     0xe000e280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0xE000E41C         DC32     0xe000e41c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40055022         DC32     0x40055022

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x48055022         DC32     0x48055022
     40          /******************************************************************************
     41           * End of module                                                              *
     42           ******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   XBAR_Init
       8   XBAR_isr
         8   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
      56  XBAR_Init
      22  XBAR_isr
       4  pCallbackXBAR

 
   4 bytes in section .bss
 102 bytes in section .text
 
 102 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
