#if !defined(AFX_MDCTEXT_H__21600233_BA67_406E_944D_E6603CC0E79D__INCLUDED_)
#define AFX_MDCTEXT_H__21600233_BA67_406E_944D_E6603CC0E79D__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CMdcText wrapper class

class CMdcText : public CWnd
{
protected:
	DECLARE_DYNCREATE(CMdcText)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x8bd21d10, 0xec42, 0x11ce, { 0x9e, 0xd, 0x0, 0xaa, 0x0, 0x60, 0x2, 0xf3 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void SetAutoSize(BOOL bNewValue);
	BOOL GetAutoSize();
	void SetAutoTab(BOOL bNewValue);
	BOOL GetAutoTab();
	void SetAutoWordSelect(BOOL bNewValue);
	BOOL GetAutoWordSelect();
	void SetBackColor(long nNewValue);
	long GetBackColor();
	void SetBackStyle(long nNewValue);
	long GetBackStyle();
	void SetBorderColor(long nNewValue);
	long GetBorderColor();
	void SetBorderStyle(long nNewValue);
	long GetBorderStyle();
	BOOL GetCanPaste();
	void SetCurLine(long nNewValue);
	long GetCurLine();
	long GetCurTargetX();
	void SetCurX(long nNewValue);
	long GetCurX();
	void SetEnterKeyBehavior(BOOL bNewValue);
	BOOL GetEnterKeyBehavior();
	void SetEnabled(BOOL bNewValue);
	BOOL GetEnabled();
	void SetRefFont(LPDISPATCH newValue);
	LPDISPATCH GetFont();
	void SetForeColor(long nNewValue);
	long GetForeColor();
	void SetHideSelection(BOOL bNewValue);
	BOOL GetHideSelection();
	void SetIntegralHeight(BOOL bNewValue);
	BOOL GetIntegralHeight();
	long GetLineCount();
	void SetLocked(BOOL bNewValue);
	BOOL GetLocked();
	void SetMaxLength(long nNewValue);
	long GetMaxLength();
	void SetMouseIcon(LPDISPATCH newValue);
	void SetRefMouseIcon(LPDISPATCH newValue);
	LPDISPATCH GetMouseIcon();
	void SetMousePointer(long nNewValue);
	long GetMousePointer();
	void SetMultiLine(BOOL bNewValue);
	BOOL GetMultiLine();
	void SetPasswordChar(LPCTSTR lpszNewValue);
	CString GetPasswordChar();
	void SetScrollBars(long nNewValue);
	long GetScrollBars();
	void SetSelectionMargin(BOOL bNewValue);
	BOOL GetSelectionMargin();
	void SetSelLength(long nNewValue);
	long GetSelLength();
	void SetSelStart(long nNewValue);
	long GetSelStart();
	void SetSelText(LPCTSTR lpszNewValue);
	CString GetSelText();
	void SetSpecialEffect(long nNewValue);
	long GetSpecialEffect();
	void SetTabKeyBehavior(BOOL bNewValue);
	BOOL GetTabKeyBehavior();
	void SetText(LPCTSTR lpszNewValue);
	CString GetText();
	void SetTextAlign(long nNewValue);
	long GetTextAlign();
	long GetTextLength();
	void SetValue(VARIANT* newValue);
	VARIANT GetValue();
	void SetWordWrap(BOOL bNewValue);
	BOOL GetWordWrap();
	void Copy();
	void Cut();
	void Paste();
	void SetIMEMode(long nNewValue);
	long GetIMEMode();
	void SetEnterFieldBehavior(long nNewValue);
	long GetEnterFieldBehavior();
	void SetDragBehavior(long nNewValue);
	long GetDragBehavior();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_MDCTEXT_H__21600233_BA67_406E_944D_E6603CC0E79D__INCLUDED_)
